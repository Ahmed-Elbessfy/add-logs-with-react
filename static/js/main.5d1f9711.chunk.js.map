{"version":3,"sources":["components/Form.js","components/Search.js","components/Logs.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","useState","title","setTitle","message","setMessage","time","setCurrnetTime","handleChange","e","target","name","value","inputStyle","width","fontSize","padding","border","margin","style","backgroundColor","fontWeight","onSubmit","preventDefault","length","alert","dayZone","today","Date","h","getHours","min","getMinutes","sec","getSeconds","day","getDate","mon","getMonth","year","getFullYear","toString","substring","currentTime","console","log","addLog","type","onChange","placeholder","height","resize","color","textTransform","cursor","className","Search","search","setSearch","searchLogs","Logs","cardStyle","position","display","visible","onClick","deleteLog","id","top","right","background","outline","App","logs","setLogs","i","newLogs","splice","text","split","includes","map","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d1f9711.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction Form(props) {\r\n  const [title, setTitle] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [time, setCurrnetTime] = useState('')\r\n\r\n  const handleChange = e => {\r\n    if (e.target.name === 'title') {\r\n      setTitle(e.target.value)\r\n    } else if (e.target.name === 'message') {\r\n      setMessage(e.target.value)\r\n    }\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (title.length === 0 || message.length === 0) {\r\n      alert('Please fill all field with proper values')\r\n    } else {\r\n      let today = new Date();\r\n      let h = today.getHours(),\r\n        dayZone,\r\n        min =\r\n          today.getMinutes() > 10 ? today.getMinutes() : `0${today.getMinutes()}`,\r\n        sec =\r\n          today.getSeconds() > 10 ? today.getSeconds() : `0${today.getSeconds()}`,\r\n        day = today.getDate() > 10 ? today.getDate() : `0${today.getDate()}`,\r\n        mon = today.getMonth() > 10 ? today.getMonth() : `0${today.getMonth()}`,\r\n        year = today\r\n          .getFullYear()\r\n          .toString()\r\n          .substring(2);\r\n      if (h > 12) {\r\n        dayZone = \"AM\";\r\n      } else {\r\n        dayZone = \"PM\";\r\n        h = h % 12;\r\n      }\r\n      let currentTime = `${h}:${min}:${sec} ${dayZone}, ${mon}-${day}-${year}`;\r\n      setCurrnetTime(`${currentTime}`)\r\n      console.log(currentTime, time)\r\n      props.addLog({ title, message, time })\r\n    }\r\n  }\r\n\r\n  // Styles\r\n  const addFormStyle = {\r\n    padding: \"1.5rem 2rem\",\r\n    border: \"1px solid #dedede\",\r\n    backgroundColor: \"#f9f9f9f9\"\r\n  };\r\n  const heading = {\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"600\"\r\n  };\r\n  const inputStyle = {\r\n    width: \"100%\",\r\n    fontSize: \"1rem\",\r\n    padding: \"8px\",\r\n    border: \"1px solid #dedede\",\r\n    margin: \"0.8rem 0\"\r\n  };\r\n  const addBtnStyle = {\r\n    backgroundColor: \"#fff\",\r\n    color: \"#0d1944\",\r\n    border: \"1px solid #dedede\",\r\n    padding: \"0.5rem 1rem\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1rem\",\r\n    cursor: \"pointer\"\r\n  };\r\n\r\n\r\n  return (\r\n    <section style={ addFormStyle }>\r\n      <p style={ heading }>Add new log</p>\r\n      <form onSubmit={ handleSubmit }>\r\n        <input\r\n          type=\"text\"\r\n          value={ title }\r\n          name=\"title\"\r\n          onChange={ handleChange }\r\n          placeholder=\"Log Title\"\r\n          style={ inputStyle }\r\n        />\r\n        <textarea\r\n          value={ message }\r\n          name=\"message\"\r\n          onChange={ handleChange }\r\n          placeholder=\"Log Message\"\r\n          style={ {\r\n            ...inputStyle,\r\n            fontSize: \"1.4rem\",\r\n            height: \"8rem\",\r\n            resize: \"none\"\r\n          } }\r\n        ></textarea>\r\n        <button style={ addBtnStyle }>\r\n          <i className=\"far fa-comment-alt\"></i> submit log\r\n          </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Form\r\n","import React, { useState } from 'react'\r\n\r\nfunction Search(props) {\r\n  const [search, setSearch] = useState('')\r\n  const handleChange = e => {\r\n    setSearch(e.target.value)\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    props.searchLogs(search)\r\n  }\r\n\r\n  // Styles\r\n  const searchFormStyle = {\r\n    padding: \"1.5rem 2rem\",\r\n    border: \"1px solid #dedede\",\r\n    backgroundColor: \"#f9f9f9f9\",\r\n    margin: '1.5rem 0'\r\n  };\r\n\r\n  const inputStyle = {\r\n    width: \"100%\",\r\n    fontSize: \"1rem\",\r\n    padding: \"8px\",\r\n    border: \"1px solid #dedede\",\r\n    margin: \"0.8rem 0\"\r\n  };\r\n  const searchBtnStyle = {\r\n    backgroundColor: \"#fff\",\r\n    color: \"#0d1944\",\r\n    border: \"1px solid #dedede\",\r\n    padding: \"0.5rem 1rem\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1rem\",\r\n    cursor: \"pointer\"\r\n  };\r\n\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit } style={ searchFormStyle }>\r\n      <input\r\n        type=\"text\"\r\n        onChange={ handleChange }\r\n        value={ search }\r\n        placeholder=\"Search by title\"\r\n        style={ inputStyle }\r\n      />\r\n      <button style={ searchBtnStyle }>search</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Search\r\n\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n\r\n// class Search extends Component {\r\n//   state = {\r\n//     search: \"\"\r\n//   };\r\n//   handleChange = e => {\r\n//     this.setState({\r\n//       search: e.target.value\r\n//     });\r\n//   };\r\n//   handleSearch = e => {\r\n//     e.preventDefault();\r\n//     this.props.searchLogs(this.state.search);\r\n//   };\r\n\r\n\r\n//   render() {\r\n//     // Styles\r\n//     const searchFormStyle = {\r\n//       padding: \"1.5rem 2rem\",\r\n//       border: \"1px solid #dedede\",\r\n//       backgroundColor: \"#f9f9f9f9\",\r\n//       margin: '1.5rem 0'\r\n//     };\r\n\r\n//     const inputStyle = {\r\n//       width: \"100%\",\r\n//       fontSize: \"1rem\",\r\n//       padding: \"8px\",\r\n//       border: \"1px solid #dedede\",\r\n//       margin: \"0.8rem 0\"\r\n//     };\r\n//     const searchBtnStyle = {\r\n//       backgroundColor: \"#fff\",\r\n//       color: \"#0d1944\",\r\n//       border: \"1px solid #dedede\",\r\n//       padding: \"0.5rem 1rem\",\r\n//       textTransform: \"capitalize\",\r\n//       fontSize: \"1rem\",\r\n//       cursor: \"pointer\"\r\n//     };\r\n\r\n\r\n//     return (\r\n//       <form onSubmit={ this.handleSearch } style={ searchFormStyle }>\r\n//         <input\r\n//           type=\"text\"\r\n//           onChange={ this.handleChange }\r\n//           value={ this.state.search }\r\n//           placeholder=\"Search by title\"\r\n//           style={ inputStyle }\r\n//         />\r\n//         <button style={ searchBtnStyle }>search</button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Search;\r\n","import React from \"react\";\r\n\r\nfunction Logs(props) {\r\n  const { title, message, time, visible } = props;\r\n  const deleteLog = () => {\r\n    props.deleteLog(props.id);\r\n  };\r\n\r\n  // Styles\r\n  const cardStyle = {\r\n    padding: \"1.5rem 2rem\",\r\n    border: \"1px solid #dedede\",\r\n    backgroundColor: \"#f9f9f9f9\",\r\n    margin: \"1rem 0\",\r\n    position: \"relative\",\r\n    display: visible ? \"block\" : \"none\"\r\n  };\r\n  const logTitleStyle = {\r\n    margin: \"0.5rem 0\"\r\n  };\r\n  const logBodyStyle = {\r\n    margin: \"0.5rem 0\"\r\n  };\r\n  const logTimeStyle = {\r\n    color: \"#858585\"\r\n  };\r\n  const delBtnStyle = {\r\n    position: \"absolute\",\r\n    top: 10,\r\n    right: 10,\r\n    background: \"transparent\",\r\n    color: \"#858585\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    padding: \"0.5rem 1rem\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.2rem\",\r\n    cursor: \"pointer\"\r\n  };\r\n\r\n  return (\r\n    <div style={cardStyle}>\r\n      <h1 style={logTitleStyle}>{title}</h1>\r\n      <p style={logBodyStyle}>{message}</p>\r\n      <span style={logTimeStyle}>{time}</span>\r\n      <button onClick={deleteLog} style={delBtnStyle}>\r\n        delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logs;\r\n","import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport Search from \"./components/Search\";\nimport Logs from \"./components/Logs\";\n\nfunction App() {\n  const [logs, setLogs] = useState([\n    {\n      title: \"alarm high energy consumption is triggered\",\n      message:\n        \"Energy consumption of this asset is high. Please resolve this issue ASAP\",\n      time: \"8:11:03 AM, 05-14-18\",\n      visible: true\n    },\n    {\n      title: \"new alarm created\",\n      message: 'A new alarm \"Low Apparent Power\" has been created ',\n      time: \"6:21:44 PM, 05-13-18\",\n      visible: true\n    }\n  ]);\n  const addLog = log => {\n    setLogs([...logs, { ...log, visible: true }]);\n  };\n\n  const deleteLog = i => {\n    let newLogs = [...logs];\n    newLogs.splice(i, 1);\n    setLogs(newLogs);\n  };\n\n  const searchLogs = text => {\n    let newLogs = [...logs];\n    for (let i = 0; i < newLogs.length; i++) {\n      if (text.length !== 0) {\n        if (!logs[i].title.split(\" \").includes(text)) {\n          logs[i].visible = false;\n        }\n      } else {\n        logs[i].visible = true;\n      }\n    }\n    setLogs(newLogs);\n  };\n\n  return (\n    <main className=\"App\">\n      <Form addLog={addLog} />\n      <section>\n        <Search searchLogs={searchLogs} />\n        {logs.map((log, i) => {\n          return (\n            <Logs\n              key={i}\n              title={log.title}\n              message={log.message}\n              time={log.time}\n              id={i}\n              visible={log.visible}\n              deleteLog={deleteLog}\n            />\n          );\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}